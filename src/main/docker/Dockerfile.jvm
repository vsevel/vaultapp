####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode
#
# Before building the docker image run:
#
# mvn package
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/vaultapp-jvm .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/vaultapp-jvm
#
###
FROM fabric8/java-alpine-openjdk8-jre

COPY src/main/docker/logging.properties /tmp/logging.properties
COPY target/lib/* /deployments/lib/

#ENV DEBUG="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005 -Djavax.net.debug=ssl"

# when using a truststore, set quarkus.vault.tls.use-kubernetes-ca-cert=false in application.properties
# by default in k8s, quarkus will use /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#ENV TLS="-Djavax.net.ssl.trustStore=/tmp/ca-crt.jks"
#COPY src/test/k8s/local-test/ca-crt.jks /tmp/ca-crt.jks

ENV TZ=Europe/Zurich
ENV AB_ENABLED=jmx_exporter
ENV JAVA_OPTIONS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.config.file=/tmp/logging.properties $TLS $DEBUG"

COPY target/*-runner.jar /deployments/app.jar

ENTRYPOINT [ "/deployments/run-java.sh" ]